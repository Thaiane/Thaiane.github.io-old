---
layout: post
title:  "[Udemy] Ruby on Rails"
date:   2017-09-28 21:34:01 -0300 
categories: blog
tags: ['ruby','rails','ruby on rails', 'linguagem']
published: true
comments: true 
excerpted: |
    Resumo e anotações do curso de Ruby on Rails do Udemy...
day_quote:
    title: "Pensamento do dia"
    content: |
        "Nenhum obstáculo é tão grande se sua vontade de vencer for maior”
# Does not change and does not remove 'script' variables
script: [post.js]
---

* Do not remove this line (it will not be displayed)
{: toc}

Segue as anotações e resumos do curso completo de Ruby on Rails do Udemy. Espero que ajude. =)

# Módulo 01 - Conceitos Básicos do ruby on Rails
## ´Como tudo começou? 
* O Ruby é uma linguagem de programação interpretada multiparadigma, de tipagem dinâmica e forte, com gerenciamento de memória automático, originalmente planejada e desenvolvida no Japão em 1995, por Yukihiro Matsumoto. Para saber mais sobre a linguagem, confira o site e documentação oficial [ruby-lang.org](https://www.ruby-lang.org/pt/){:target="_blank"}
* O Ruby on Rails é um framework que visa aumentar a velocidade e facilidade no desenvolvimento de sites, fazendo uso de boas práticas como DRY (Don't Repeat Yourself) e CoC (convention over configuration). Para saber mais sobre o framework, confira o site e documentação oficial [rubyonrails.org](http://rubyonrails.org/){:target="_blank"}

* Gems são bibliotecas reutilizáveis. Saiba mais na documentação oficial [rubygems.org](https://rubygems.org/){:target="_blank"}

* Utilizaremos o Cluoud 9 como IDE online. Acesse em  [c9.io](https://c9.io){:target="_blank"}
* Use `gem install cpf_utils` para instalar uma gem e `gem uninstall cpf_utils` para remover.
* Utilize `gem cluanup` para limpar versões de gems antigas.
* O Bundler é uma gem que gerencia, instala e controla as dependências de outras gems. Saiba mais em [bundler.io](http://bundler.io/){:target="_blank"}.
* Para usar o bundle, crie um arquivo chamado Gemfile e adicione o repositório no início do arquivo: `source 'https://rubygems.org'`. Em seguida, insira as gems que deseja instala e suas versões. Para executar basta usar o `bundle exec`
* Utilize `rails new myapp` para criar uma aplicação rails na versão da sua máquina e `rails server` para subir a aplicação.
* Use `ruby meuarquivo.rb` para rodar seu programa em ruby.
* No terminal, uso `irb` para acessar o o shell interativo do ruby.
* No irb, uso o atributo.methods ou atributo.(aperta tab). Dessa forma será mostrado os métodos possíveis.
* Tudo é objeto no ruby.
* O Vector ARGV pode ser usado `x = ARGV` irá considerar os dados de entrada no stdin como entradas para o vetor. 
* para juntar um elemento de outro hash no hash você pode usar o `hash.merge!({"c"=>4})`.Ele irá modificar o próprio merge.
* "String".split retorna um vetor.
* ["vetor"].join( ) retorna uma string.
* Range (1..10) -> vai de 1 a 10, já o (1...10) vai de 1 a 9.
* @nome é variável de instância e nome é variável global.
* Herança se declara `Pessoa < PessoaJuridica`.
* Módulos são similares a classes, armazezam métodos, constantes e outras classes ou módulos. Mas não pode criar objetivos ou herança. São boas opções para definir constantes ou namespace (espaço de nome).
* Mixins são formas de importar constantes ou métodos para uma classe. Para isso, basta dar require e inlude dos módulos na classe.
* Gem faker gera nomes falsos para testes.
* No rails, as tabelas ficam no plural.


# Módulo 02 - Configurando um novo ambiente de desenvolvimento
(em andamento)

# Módulo 03 - Desenvolvendo uma aplicação do início ao fim
(em andamento)

# Módulo 04 - Configurando um VPS
(em andamento)

# Módulo 05 - Assuntos Extras não abordados nos módulos anteriores
(em andamento)








Agradeço a leitura. :blush:



